<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0615.2100                               -->
<workbook original-version='10.3' source-build='10.3.1 (10300.17.0615.2100)' source-platform='mac' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.3'>
      <aliases enabled='yes' />
      <column caption='Choose Threshold' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <members>
          <member value='1' />
          <member value='2' />
        </members>
      </column>
    </datasource>
    <datasource caption='percents' inline='true' name='federated.0i7oj1111hw4vm159vjvv1agnpmp' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='percents' name='textscan.0e7yxqt05bzc9k1dhvyud0syxnr5'>
            <connection class='textscan' directory='/Users/ryanbest/Dropbox/python' filename='percents.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0e7yxqt05bzc9k1dhvyud0syxnr5' name='percents.csv' table='[percents#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='PlayerID' ordinal='0' />
            <column datatype='string' name='Flag' ordinal='1' />
            <column datatype='integer' name='sum' ordinal='2' />
            <column datatype='integer' name='count' ordinal='3' />
            <column datatype='real' name='percent' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
            <column datatype='string' name='Name' ordinal='6' />
            <column datatype='string' name='Position' ordinal='7' />
            <column datatype='string' name='Team' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>PlayerID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PlayerID]</local-name>
            <parent-name>[percents.csv]</parent-name>
            <remote-alias>PlayerID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flag</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Flag]</local-name>
            <parent-name>[percents.csv]</parent-name>
            <remote-alias>Flag</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sum]</local-name>
            <parent-name>[percents.csv]</parent-name>
            <remote-alias>sum</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[percents.csv]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent]</local-name>
            <parent-name>[percents.csv]</parent-name>
            <remote-alias>percent</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[percents.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[percents.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Position</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Position]</local-name>
            <parent-name>[percents.csv]</parent-name>
            <remote-alias>Position</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[percents.csv]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[percents.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Threshold Calc Field' datatype='boolean' name='[Calculation_1163476854740721665]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;    WHEN 1 THEN [Flag] = &apos;OneFlag&apos;&#10;    WHEN 2 THEN [Flag] = &apos;TwoFlag&apos;&#10;END' />
      </column>
      <column caption='INDEX' datatype='integer' name='[Calculation_1163476854757867522]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Player ID' datatype='string' name='[PlayerID]' role='dimension' type='nominal' />
      <column datatype='string' name='[Position]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column caption='Percent' datatype='real' default-format='p0.0%' name='[percent]' role='measure' type='quantitative' />
      <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.437396' measure-ordering='alphabetic' measure-percentage='0.367279' parameter-percentage='0.195326' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Position:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;QB&quot;</bucket>
            <bucket>&quot;WR&quot;</bucket>
            <bucket>&quot;RB&quot;</bucket>
            <bucket>&quot;TE&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choose Threshold' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='basedata' inline='true' name='federated.1cdkrq50zwcb2o1f1rm481evmhdq' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='basedata' name='textscan.03uhcyp00rk2ye15sfkza0quad3y'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='/Users/ryanbest/Dropbox/python/basedata.csv' dataRefreshTime='' directory='/Users/ryanbest/Dropbox/python' filename='/var/folders/vh/68qsnlhj6_35lkx7xzyc4nrw0000gn/T/tableau-temp/0cbeo8g1m6fyxx13mt00m0elyk1z/basedata.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.03uhcyp00rk2ye15sfkza0quad3y' name='basedata.csv' table='[basedata#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:Y8042:no:A1:Y8042:1' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='PlayerID' ordinal='1' />
            <column datatype='real' name='Rank' ordinal='2' />
            <column datatype='string' name='Week' ordinal='3' />
            <column datatype='integer' name='2-Pt Conversions' ordinal='4' />
            <column datatype='real' name='FanPts' ordinal='5' />
            <column datatype='integer' name='Fumble Recovery TDs' ordinal='6' />
            <column datatype='integer' name='Fumbles Lost' ordinal='7' />
            <column datatype='integer' name='Passing INTs' ordinal='8' />
            <column datatype='integer' name='Passing TDs' ordinal='9' />
            <column datatype='integer' name='Passing Yards' ordinal='10' />
            <column datatype='integer' name='Receiving TDs' ordinal='11' />
            <column datatype='integer' name='Receiving Yards' ordinal='12' />
            <column datatype='integer' name='Receptions' ordinal='13' />
            <column datatype='integer' name='Return TDs' ordinal='14' />
            <column datatype='integer' name='Rushing Atts' ordinal='15' />
            <column datatype='integer' name='Rushing TDs' ordinal='16' />
            <column datatype='integer' name='Rushing Yards' ordinal='17' />
            <column datatype='integer' name='Targets' ordinal='18' />
            <column datatype='integer' name='Year' ordinal='19' />
            <column datatype='integer' name='OneFlag' ordinal='20' />
            <column datatype='integer' name='TwoFlag' ordinal='21' />
            <column datatype='string' name='Name' ordinal='22' />
            <column datatype='string' name='Position' ordinal='23' />
            <column datatype='string' name='Team' ordinal='24' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PlayerID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PlayerID]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>PlayerID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Week</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Week]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Week</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2-Pt Conversions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2-Pt Conversions]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>2-Pt Conversions</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FanPts</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FanPts]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>FanPts</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fumble Recovery TDs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fumble Recovery TDs]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Fumble Recovery TDs</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fumbles Lost</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fumbles Lost]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Fumbles Lost</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Passing INTs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Passing INTs]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Passing INTs</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Passing TDs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Passing TDs]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Passing TDs</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Passing Yards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Passing Yards]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Passing Yards</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Receiving TDs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Receiving TDs]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Receiving TDs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Receiving Yards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Receiving Yards]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Receiving Yards</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Receptions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Receptions]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Receptions</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Return TDs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Return TDs]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Return TDs</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rushing Atts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rushing Atts]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Rushing Atts</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rushing TDs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rushing TDs]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Rushing TDs</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rushing Yards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rushing Yards]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Rushing Yards</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Targets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Targets]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Targets</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OneFlag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OneFlag]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>OneFlag</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TwoFlag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TwoFlag]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>TwoFlag</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Position</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Position]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Position</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[basedata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y8042:no:A1:Y8042:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>107316</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[2-Pt Conversions]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Rank (rounded)' datatype='integer' name='[Calculation_1163476854737969152]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='int([Rank])' />
      </column>
      <column caption='Threshold Calc Field' datatype='integer' name='[Calculation_1163476854740721665]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;    WHEN 1 THEN [OneFlag]&#10;    WHEN 2 THEN [TwoFlag]&#10;END' />
      </column>
      <column caption='Fan Pts' datatype='real' name='[FanPts]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Fumbles Lost]' role='measure' type='quantitative' />
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='One Flag' datatype='integer' name='[OneFlag]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Passing INTs]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Passing TDs]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Passing Yards]' role='measure' type='quantitative' />
      <column caption='Player ID' datatype='string' name='[PlayerID]' role='dimension' type='nominal' />
      <column datatype='string' name='[Position]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='real' name='[Rank]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Receiving TDs]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Receiving Yards]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Receptions]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Return TDs]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Rushing Atts]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Rushing TDs]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Rushing Yards]' role='measure' type='quantitative' />
      <column caption='Two Flag' datatype='integer' name='[TwoFlag]' role='measure' type='quantitative' />
      <column datatype='string' name='[Week]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_1163476854740721665]' derivation='None' name='[none:Calculation_1163476854740721665:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Name,Week)' hidden='true' name='[Action (Name,Week)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Name]' />
          <groupfilter function='level-members' level='[Week]' />
        </groupfilter>
      </group>
      <group caption='Action (Player ID,Position)' hidden='true' name='[Action (Player ID,Position)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PlayerID]' />
          <groupfilter function='level-members' level='[Position]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.315526' measure-ordering='alphabetic' measure-percentage='0.646077' parameter-percentage='0.0383973' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1163476854740721665:ok]' type='palette'>
            <map to='#309143'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choose Threshold' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0i7oj1111hw4vm159vjvv1agnpmp'>
      <datasources>
        <datasource caption='percents' name='federated.0i7oj1111hw4vm159vjvv1agnpmp' />
      </datasources>
      <datasource-dependencies datasource='federated.0i7oj1111hw4vm159vjvv1agnpmp'>
        <column datatype='string' name='[Position]' role='dimension' type='nominal' />
        <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]'>
        <groupfilter function='member' level='[none:Position:nk]' member='&quot;WR&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]' />
      </filter>
    </shared-view>
    <shared-view name='federated.1cdkrq50zwcb2o1f1rm481evmhdq'>
      <datasources>
        <datasource caption='basedata' name='federated.1cdkrq50zwcb2o1f1rm481evmhdq' />
      </datasources>
      <datasource-dependencies datasource='federated.0i7oj1111hw4vm159vjvv1agnpmp'>
        <column datatype='string' name='[Position]' role='dimension' type='nominal' />
        <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1cdkrq50zwcb2o1f1rm481evmhdq'>
        <column datatype='string' name='[Position]' role='dimension' type='nominal' />
        <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]'>
        <groupfilter function='member' level='[none:Position:nk]' member='&quot;WR&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Position:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Percent 1&apos;s or 2&apos;s' type='sheet' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Grid?%5Bfederated.1cdkrq50zwcb2o1f1rm481evmhdq%5D.%5BPlayerID%5D~s0=&lt;[PlayerID]~na&gt;&amp;%5Bfederated.1cdkrq50zwcb2o1f1rm481evmhdq%5D.%5BPosition%5D~s0=&lt;[Position]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Grid' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Grid' type='sheet' worksheet='WS Grid' />
      <link caption='Filter2' delimiter=',' escape='\' expression='tsl:Grid?%5Bfederated.1cdkrq50zwcb2o1f1rm481evmhdq%5D.%5BName%5D~s0=&lt;[Name]~na&gt;&amp;%5Bfederated.1cdkrq50zwcb2o1f1rm481evmhdq%5D.%5BWeek%5D~s0=&lt;[Week]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='WS Grid' />
        <param name='on-empty' value='none' />
        <param name='target' value='Grid' />
      </command>
    </action>
    <datasources>
      <datasource caption='percents' name='federated.0i7oj1111hw4vm159vjvv1agnpmp' />
      <datasource caption='basedata' name='federated.1cdkrq50zwcb2o1f1rm481evmhdq' />
    </datasources>
    <datasource-dependencies datasource='federated.0i7oj1111hw4vm159vjvv1agnpmp'>
      <column caption='Player ID' datatype='string' name='[PlayerID]' role='dimension' type='nominal' />
      <column datatype='string' name='[Position]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1cdkrq50zwcb2o1f1rm481evmhdq'>
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column caption='Player ID' datatype='string' name='[PlayerID]' role='dimension' type='nominal' />
      <column datatype='string' name='[Position]' role='dimension' type='nominal' />
      <column datatype='string' name='[Week]' role='dimension' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='WS Grid'>
      <table>
        <view>
          <datasources>
            <datasource caption='basedata' name='federated.1cdkrq50zwcb2o1f1rm481evmhdq' />
            <datasource caption='percents' name='federated.0i7oj1111hw4vm159vjvv1agnpmp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose Threshold' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0i7oj1111hw4vm159vjvv1agnpmp'>
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1cdkrq50zwcb2o1f1rm481evmhdq'>
            <column aggregation='Sum' caption='Rank (rounded)' datatype='integer' name='[Calculation_1163476854737969152]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='int([Rank])' />
            </column>
            <column caption='Threshold Calc Field' datatype='integer' name='[Calculation_1163476854740721665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;    WHEN 1 THEN [OneFlag]&#10;    WHEN 2 THEN [TwoFlag]&#10;END' />
            </column>
            <column caption='Fan Pts' datatype='real' name='[FanPts]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column caption='One Flag' datatype='integer' name='[OneFlag]' role='measure' type='quantitative' />
            <column caption='Player ID' datatype='string' name='[PlayerID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='real' name='[Rank]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column caption='Two Flag' datatype='integer' name='[TwoFlag]' role='measure' type='quantitative' />
            <column datatype='string' name='[Week]' role='dimension' type='nominal' />
            <column-instance column='[FanPts]' derivation='Avg' name='[avg:FanPts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1163476854737969152]' derivation='None' name='[none:Calculation_1163476854737969152:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1163476854740721665]' derivation='None' name='[none:Calculation_1163476854740721665:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[PlayerID]' derivation='None' name='[none:PlayerID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Week]' derivation='None' name='[none:Week:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[Action (Player ID,Position)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PlayerID]' />
              <groupfilter function='level-members' level='[Position]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Team:nk]'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]</column>
            <column>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[Action (Player ID,Position)]</column>
            <column>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Week:nk]' value='119' />
            <format attr='height' field='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Calculation_1163476854737969152:ok]' value='94' />
            <format attr='text-format' field='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[avg:FanPts:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Calculation_1163476854740721665:ok]' />
              <lod column='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:PlayerID:nk]' />
              <text column='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Name:nk]' />
              <text column='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[avg:FanPts:qk]' />
              <text column='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Calculation_1163476854737969152:ok]' />
              <text column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='10'>&lt;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Name:nk]&gt; </run>
                <run fontsize='8' italic='true'>(&lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]&gt;&lt;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Calculation_1163476854737969152:ok]&gt; - </run>
                <run fontsize='8' italic='true'>&lt;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[avg:FanPts:qk]&gt;</run>
                <run fontsize='8' italic='true'>)</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Calculation_1163476854737969152:ok]</rows>
        <cols>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Week:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='WS Percents'>
      <table>
        <view>
          <datasources>
            <datasource caption='percents' name='federated.0i7oj1111hw4vm159vjvv1agnpmp' />
            <datasource caption='basedata' name='federated.1cdkrq50zwcb2o1f1rm481evmhdq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose Threshold' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0i7oj1111hw4vm159vjvv1agnpmp'>
            <column caption='Threshold Calc Field' datatype='boolean' name='[Calculation_1163476854740721665]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;    WHEN 1 THEN [Flag] = &apos;OneFlag&apos;&#10;    WHEN 2 THEN [Flag] = &apos;TwoFlag&apos;&#10;END' />
            </column>
            <column caption='INDEX' datatype='integer' name='[Calculation_1163476854757867522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Flag]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column caption='Player ID' datatype='string' name='[PlayerID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Team]' derivation='Attribute' name='[attr:Team:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1163476854740721665]' derivation='None' name='[none:Calculation_1163476854740721665:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[PlayerID]' derivation='None' name='[none:PlayerID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
            <column caption='Percent' datatype='real' default-format='p0.0%' name='[percent]' role='measure' type='quantitative' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[percent]' derivation='Sum' name='[sum:percent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sum]' derivation='Sum' name='[sum:sum:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[sum]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1163476854757867522]' derivation='User' name='[usr:Calculation_1163476854757867522:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1cdkrq50zwcb2o1f1rm481evmhdq'>
            <column aggregation='Sum' caption='Rank (rounded)' datatype='integer' name='[Calculation_1163476854737969152]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='int([Rank])' />
            </column>
            <column aggregation='Sum' datatype='real' name='[Rank]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1163476854737969152]' derivation='Median' name='[med:Calculation_1163476854737969152:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Calculation_1163476854740721665:nk]'>
            <groupfilter function='member' level='[none:Calculation_1163476854740721665:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:PlayerID:nk]' direction='DESC' using='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk]' />
          <slices>
            <column>[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]</column>
            <column>[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Calculation_1163476854740721665:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Name:nk]' value='28' />
            <format attr='text-format' field='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[med:Calculation_1163476854737969152:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:PlayerID:nk]' value='false' />
            <format attr='display' field='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk]' />
              <tooltip column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk]' />
              <tooltip column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:count:qk]' />
              <tooltip column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:sum:qk]' />
              <tooltip column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[attr:Team:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='22'>&lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Name:nk]&gt;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontcolor='#75a1c7' fontsize='12'>(&lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[attr:Team:nk]&gt; - &lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]&gt;)</run>
                <run fontalignment='1'>Æ&#10;&#10;</run>
                <run bold='true' fontalignment='1' fontcolor='#898989' fontsize='12'>&lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]&gt;&lt;[Parameters].[Parameter 1]&gt; &lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk]&gt; of weeks (&lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:sum:qk]&gt; of &lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:count:qk]&gt;)</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontcolor='#898989' fontsize='12'>Median Rank: &lt;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[med:Calculation_1163476854737969152:qk]&gt;</run>
                <run fontalignment='1'>Æ&#10;&#10;</run>
                <run fontalignment='1' fontcolor='#898989' fontsize='8' italic='true'>Click to see &lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Name:nk]&gt;&apos;s position on a week-by-week grid</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk]' />
              <tooltip column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk]' />
              <tooltip column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:count:qk]' />
              <tooltip column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:sum:qk]' />
              <tooltip column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[attr:Team:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='22'>&lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Name:nk]&gt;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontcolor='#75a1c7' fontsize='12'>(&lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[attr:Team:nk]&gt; - &lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]&gt;)</run>
                <run fontalignment='1'>Æ&#10;&#10;</run>
                <run bold='true' fontalignment='1' fontcolor='#898989' fontsize='12'>&lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]&gt;&lt;[Parameters].[Parameter 1]&gt; &lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk]&gt; of weeks (&lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:sum:qk]&gt; of &lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:count:qk]&gt;)</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontcolor='#898989' fontsize='12'>Median Rank: &lt;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[med:Calculation_1163476854737969152:qk]&gt;</run>
                <run fontalignment='1'>Æ&#10;&#10;</run>
                <run fontalignment='1' fontcolor='#898989' fontsize='8' italic='true'>Click to see &lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Name:nk]&gt;&apos;s position on a week-by-week grid</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.18591159582138062' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk]' />
              <tooltip column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk]' />
              <tooltip column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:count:qk]' />
              <tooltip column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:sum:qk]' />
              <tooltip column='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[attr:Team:nk]' />
              <tooltip column='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[med:Calculation_1163476854737969152:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='22'>&lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Name:nk]&gt;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontcolor='#75a1c7' fontsize='12'>(&lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[attr:Team:nk]&gt; - &lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]&gt;)</run>
                <run fontalignment='1'>Æ&#10;&#10;</run>
                <run bold='true' fontalignment='1' fontcolor='#898989' fontsize='12'>&lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]&gt;&lt;[Parameters].[Parameter 1]&gt; &lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk]&gt; of weeks (&lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:sum:qk]&gt; of &lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:count:qk]&gt;)</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontcolor='#898989' fontsize='12'>Median Rank: &lt;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[med:Calculation_1163476854737969152:qk]&gt;</run>
                <run fontalignment='1'>Æ&#10;&#10;</run>
                <run fontalignment='1' fontcolor='#898989' fontsize='8' italic='true'>Click to see &lt;[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Name:nk]&gt;&apos;s position on a week-by-week grid</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7251380681991577' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk] / ([federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:PlayerID:nk] / ([federated.0i7oj1111hw4vm159vjvv1agnpmp].[usr:Calculation_1163476854757867522:ok] / [federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Name:nk])))</rows>
        <cols>([federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk] + [federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='WS Player Week Detail'>
      <table>
        <view>
          <datasources>
            <datasource caption='basedata' name='federated.1cdkrq50zwcb2o1f1rm481evmhdq' />
            <datasource caption='percents' name='federated.0i7oj1111hw4vm159vjvv1agnpmp' />
          </datasources>
          <datasource-dependencies datasource='federated.0i7oj1111hw4vm159vjvv1agnpmp'>
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1cdkrq50zwcb2o1f1rm481evmhdq'>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[2-Pt Conversions]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Fumbles Lost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Passing INTs]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Passing TDs]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Passing Yards]' role='measure' type='quantitative' />
            <column caption='Player ID' datatype='string' name='[PlayerID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Receiving TDs]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Receiving Yards]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Receptions]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Return TDs]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Rushing Atts]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Rushing TDs]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Rushing Yards]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='string' name='[Week]' role='dimension' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Week]' derivation='None' name='[none:Week:nk]' pivot='key' type='nominal' />
            <column-instance column='[2-Pt Conversions]' derivation='Sum' name='[sum:2-Pt Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fumbles Lost]' derivation='Sum' name='[sum:Fumbles Lost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Passing INTs]' derivation='Sum' name='[sum:Passing INTs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Passing TDs]' derivation='Sum' name='[sum:Passing TDs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Passing Yards]' derivation='Sum' name='[sum:Passing Yards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Receiving TDs]' derivation='Sum' name='[sum:Receiving TDs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Receiving Yards]' derivation='Sum' name='[sum:Receiving Yards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Receptions]' derivation='Sum' name='[sum:Receptions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Return TDs]' derivation='Sum' name='[sum:Return TDs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rushing Atts]' derivation='Sum' name='[sum:Rushing Atts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rushing TDs]' derivation='Sum' name='[sum:Rushing TDs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rushing Yards]' derivation='Sum' name='[sum:Rushing Yards:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Passing Yards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Passing TDs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Passing INTs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Rushing Atts:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Rushing Yards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Rushing TDs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Receptions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Receiving Yards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Receiving TDs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Fumbles Lost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:2-Pt Conversions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Return TDs:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Passing Yards:qk]&quot;</bucket>
              <bucket>&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Passing TDs:qk]&quot;</bucket>
              <bucket>&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Passing INTs:qk]&quot;</bucket>
              <bucket>&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Rushing Atts:qk]&quot;</bucket>
              <bucket>&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Rushing Yards:qk]&quot;</bucket>
              <bucket>&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Rushing TDs:qk]&quot;</bucket>
              <bucket>&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Receptions:qk]&quot;</bucket>
              <bucket>&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Receiving Yards:qk]&quot;</bucket>
              <bucket>&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Receiving TDs:qk]&quot;</bucket>
              <bucket>&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Fumbles Lost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:2-Pt Conversions:qk]&quot;</bucket>
              <bucket>&quot;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[sum:Return TDs:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[Action (Name,Week)]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='empty-level' member='[Name]' />
              <groupfilter function='empty-level' member='[Week]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[Action (Player ID,Position)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PlayerID]' />
              <groupfilter function='level-members' level='[Position]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]</column>
            <column>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[Action (Name,Week)]</column>
            <column>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[:Measure Names]</column>
            <column>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[Action (Player ID,Position)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Week:nk]' value='84' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[:Measure Names]' value='140' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[:Measure Names]' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Name:&#9;</run>
                <run bold='true'>&lt;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Week:&#9;</run>
                <run bold='true'>&lt;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Week:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run> &lt;</run>
                <run>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[Multiple Values]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[:Measure Names]</rows>
        <cols>([federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Name:nk] / ([federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Team:nk] / ([federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Position:nk] / [federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Week:nk])))</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Grid'>
      <style />
      <size maxheight='678' maxwidth='1100' minheight='678' minwidth='1100' sizing-mode='fixed' />
      <datasources>
        <datasource caption='percents' name='federated.0i7oj1111hw4vm159vjvv1agnpmp' />
        <datasource caption='basedata' name='federated.1cdkrq50zwcb2o1f1rm481evmhdq' />
      </datasources>
      <datasource-dependencies datasource='federated.0i7oj1111hw4vm159vjvv1agnpmp'>
        <column datatype='string' name='[Position]' role='dimension' type='nominal' />
        <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1cdkrq50zwcb2o1f1rm481evmhdq'>
        <column datatype='string' name='[Team]' role='dimension' type='nominal' />
        <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99636' x='0' y='0'>
              <zone h='8260' id='8' param='horz' type='layout-flow' w='40000' x='0' y='0'>
                <zone fixed-size='230' h='8260' id='6' is-fixed='true' mode='dropdown' name='WS Grid' param='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]' show-all='false' type='filter' w='22001' x='0' y='0' />
                <zone h='8260' id='7' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='17999' x='22001' y='0' />
              </zone>
              <zone h='91740' id='11' param='horz' type='layout-flow' w='99636' x='0' y='8260'>
                <zone h='91740' id='1' name='WS Grid' show-title='false' w='98817' x='0' y='8260'>
                  <layout-cache fixed-size-w='2122' type-h='fixed' type-w='fixed' />
                </zone>
                <zone h='91740' id='10' name='WS Player Week Detail' show-title='false' w='819' x='98817' y='8260'>
                  <layout-cache fixed-size-w='1' type-h='fixed' type-w='fixed' />
                </zone>
              </zone>
              <zone h='8260' id='12' mode='dropdown' name='WS Grid' param='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Team:nk]' type='filter' w='18000' x='40000' y='0' />
              <zone fixed-size='611' h='8260' id='9' is-fixed='true' type='empty' w='41636' x='58000' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Percent 1&apos;s or 2&apos;s'>
      <style />
      <size maxheight='678' maxwidth='1100' minheight='678' minwidth='1100' sizing-mode='fixed' />
      <datasources>
        <datasource caption='percents' name='federated.0i7oj1111hw4vm159vjvv1agnpmp' />
      </datasources>
      <datasource-dependencies datasource='federated.0i7oj1111hw4vm159vjvv1agnpmp'>
        <column datatype='string' name='[Position]' role='dimension' type='nominal' />
        <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='1' param='vert' type='layout-flow' w='99636' x='0' y='0'>
              <zone h='8260' id='8' param='horz' type='layout-flow' w='99636' x='0' y='0'>
                <zone h='8260' id='6' mode='dropdown' name='WS Percents' param='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]' show-all='false' type='filter' w='15637' x='0' y='0' />
                <zone custom-title='true' h='8260' id='9' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='32180' x='15637' y='0'>
                  <formatted-text>
                    <run>Choose Threshold (player was at least a # in their position)</run>
                  </formatted-text>
                </zone>
                <zone fixed-size='562' h='8260' id='10' is-fixed='true' type='empty' w='51819' x='47817' y='0' />
              </zone>
              <zone h='91740' id='3' name='WS Percents' show-title='false' w='99636' x='0' y='8260'>
                <layout-cache fixed-size-h='5088' minwidth='321' type-h='fixed' type-w='scalable' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='dashboard' maximized='true' name='Percent 1&apos;s or 2&apos;s' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='WS Percents' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Grid' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='WS Grid' />
        <viewpoint name='WS Player Week Detail' />
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' hidden='true' name='WS Grid' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Calculation_1163476854740721665:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]</field>
            <field>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Calculation_1163476854737969152:ok]</field>
            <field>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Calculation_1163476854740721665:ok]</field>
            <field>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:FanPts:qk]</field>
            <field>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Name:nk]</field>
            <field>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:PlayerID:nk]</field>
            <field>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Position:nk]</field>
            <field>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Rank:ok]</field>
            <field>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Team:nk]</field>
            <field>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Week:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='WS Percents' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='1' param='[federated.0i7oj1111hw4vm159vjvv1agnpmp].[sum:percent:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Calculation_1163476854740721665:nk]</field>
            <field>[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Name:nk]</field>
            <field>[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:PlayerID:nk]</field>
            <field>[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Position:nk]</field>
            <field>[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:Team:nk]</field>
            <field>[federated.0i7oj1111hw4vm159vjvv1agnpmp].[none:flag:nk]</field>
            <field>[federated.0i7oj1111hw4vm159vjvv1agnpmp].[usr:Calculation_1163476854757867522:ok]</field>
            <field>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Calculation_1163476854737969152:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='WS Player Week Detail'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[:Measure Names]</field>
            <field>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[Multiple Values]</field>
            <field>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Name:nk]</field>
            <field>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Position:nk]</field>
            <field>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Team:nk]</field>
            <field>[federated.1cdkrq50zwcb2o1f1rm481evmhdq].[none:Week:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Grid' width='384'>
      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
      xcsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Percent 1&apos;s or 2&apos;s' width='384'>
      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
      0QAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
